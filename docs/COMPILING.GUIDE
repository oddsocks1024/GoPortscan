@database COMPILING.guide
@Width 80

@Node Main "CONTENTS"


                          COMPILING GO PORTSCAN! V1.1
                          ---------------------------

The release of the source code, does not mean I have stopped development work on
Go Portscan!, but rather I think there's a lot of useful code here which other
people may make use of. When developing Go Portscan! there was almost no E
source available as an example to work from, so most of what is here had to be
researched and/or based on examples in C.

                          @{" LICENSE & DISCLAIMER " Link "LICENSE"}

                          @{" Requirements         " Link "REQUIREMENTS"}
                          @{" Description of Files " Link "DESCRIPTION"}
                          @{" Compiling            " Link "COMPILING"}

                          @{" Credits              " Link "CREDITS"}
@endnode
@node License "LICENSE"

                              LICENSE & DISCLAIMER
                              --------------------

BINARY LICENSE
--------------

Use of this software is entirely at your own risk. You accept any consequences
whatsoever as a result of using this software, whether intentional or
accidental. This includes, but is not limited to, damage to hardware, software
or legal actions taken as a direct or indirect result of using this software.
The author does not support the use of this software as part of a hacking
attempt, either to gain unauthorised access to a system or as an aid in a denial
of service attack. There is no warranty, either expressed or implied.

It is worth noting that simply portscanning a machine on which you do not have
authorisation to do so, is illegal in some jurisdictions.

Go Portscan! is free for distribution, providing no profit is gained from it.

SOURCE LICENSE
--------------

Permission is granted to use this source code in whole or in part, providing
that the author (Ian Chapman) is credited in your project in either the
documentation or the program itself. This applies to both free and commercial
software. In the case of commercial software (including Shareware and similar),
I am entitled to a free, fully functional copy of the software.

NO WARRANTY EITHER EXPRESSED OR IMPLIED AS TO THE FITNESS OF THIS CODE FOR ANY
PURPOSED. ALL USE IS ENTIRELY AND WHOLLY AT YOUR OWN RISK.


@endnode
@node Requirements "REQUIREMENTS"

                                  REQUIREMENTS
                                  ------------

Go Portscan! may not compile, or compile correctly unless you meet these
requirements.

1. A full Amiga E compiler. You cannot use the demo version. It should be at
   least V3.1i however at the time of writing, V3.3a (fully functional) is
   available to download free from the Amiga E homepage.

   It is useful, but not strictly necessary to make sure EC (the compiler) is
   in your default command path.

2. Make sure you're using the correct OS EMODULES. The ones supplied as part of
   Amiga E 3.1i or newer are OK.

3. Go Portscan! uses FlexCat as part of its build process to aid localisation.
   FlexCat is available from Aminet. You should use at least V2.6.

   It is useful, but not strictly necessary to make sure FlexCat is in your
   default command path.

4. Go Portscan! makes use of some 3rd party EMODULES. They have NOT been
   included in this distribution, but were distributed with the Go Portscan!
   V1.0 source release. They are also available from Aminet.

   mui38dev-E.lha by Jan Hendrik Schulz
   AmiTCP_beta.lha by Jason R. Hulance
   MCC_Busy2_E.lha by Klaus Melchior
   BetterString_E.lha by Daniel Westerberg
   SoftTimer_oo.lha by Daniel Westerberg

@endnode
@node Description "DESCRIPTION"

                              DESCRIPTION OF FILES
                              --------------------

LOGOS [DIR]          : Contains graphics files of Go Portscan's! OLD logo
EXPERIMENTAL [DIR]   : Snippets of experimental source code as part of Go
                       Portscan's! development. Largely redundant code.
catalogs [DIR]       : Catalogs and descriptor files for localisation
enums.e              : Contains various constants and E-Nums
GoPortscan!.e        : Main source code to Go Portscan!
GoPortscan!_en.guide : English documentation in AmigaGuide format
gpmake               : Amiga DOS shell script to build Go Portscan!
gpobjects.e          : Contains some objects for Go Portscan!
hungarian.lzx        : Contains hungarian locale by Marton Dosa
Install              : Installer script
Install_OS35         : Installer script for OS35+
newlogo.e            : Source code for current logo
servicetable.e       : Internal service table for Go Portscan!
texts.e              : Strings isolated for localisation
                       (AUTOMATICALLY GENERATED)
texts.sd             : Parsed by FlexCat to produce texts.e
@endnode
@node Compiling "COMPILING"

                                   COMPILING
                                   ---------

Before compiling, make sure you meet the requirements!

Compiling can be done by opening a shell, and changing directory to where the Go
Portscan! source is located. In this directory there is a shell script called
gpmake which runs everything necessary to compile Go Portscan!. If you do not
have EC (the compiler) or FlexCat in your default command path, you will have to
edit this script and specify the full paths. The script does contain some
comments which you may wish to read. You should be able to run the script
directly by typing gpmake at the command prompt, however if this fails, make
sure it has the "s" and "e" flags set on the file.

Most of the source code contains a basic description at the top of what it does
which you may wish to read if you want to make any changes. NOTE: It is
important that you do NOT make any changes directly to the file texts.e as this
is generated automatically by FlexCat. All changes should be made to texts.sd
instead. This is the source descriptor file.

@endnode
@node Credits "CREDITS"

                                    CREDITS
                                    -------

Credits in no particular order go to the following:

Marton Dosa - Hungarian Locale
Luca Longone - Contributed some icons
Todd Oberly - Some beta testing
Daniel Westerberg - Softtimer_oo EMODULES
Jan Hendrik Schulz - MUI EMODULES
Jason R. Hulance - AmiTCP EMODULES
Klaus Melchior - Busy_mcc EMODULES
Daniel Westerberg - Betterstring_mcc EMODULES


Apologies to anyone I've missed.

@endnode
